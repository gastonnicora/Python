{
  "Usuarios": {
    "description": "Endpoint de usuario",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "name": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El nombre debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El nombre debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un nombre"
          }
        },
        "example": "Gastón",
        "model": true
      },
      "lastName": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El apellido debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El apellido debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un apellido"
          }
        },
        "example": "Nicora",
        "model": true
      },
      "email": {
        "description": "",
        "property": {
          "type": {
            "value": "email",
            "error": "El email debe ser un email valido, por ejemplo:'gastonmatias.21@gmail.com'"
          },
          "max length": {
            "value": 255,
            "error": "El email debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un apellido"
          }
        },
        "example": "gastonmatias.21@gmail.com",
        "model": true
      },
      "password": {
        "description": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          }
        },
        "example": "12345678",
        "model": true
      },
      "companies": {
        "description": "Datos da las empresa que posee el usuario",
        "property": {
          "type": {
            "value": "dict",
            "error": ""
          }
        },
        "model": true
      },
      "oldPassword": {
        "description": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          }
        },
        "example": "12345678",
        "model": false
      },
      "repetitionPass": {
        "description": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "repeat": {
            "value": true,
            "error": "Las contraseñas deben coincidir",
            "repetition": "password"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          }
        },
        "example": "12345678",
        "model": false
      },
      "birthdate": {
        "description": "Formato dia/mes/año (01/01/2013)",
        "format": "%d/%m/%Y",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "21/06/1997",
        "model": true
      },
      "removed": {
        "description": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "confirmEmail": {
        "description": "Si confirmo el email, 1 es que si y 0 es que no",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfUpdate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "terms": {
        "type": "Int",
        "description": "",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir una fecha valida"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 1,
            "error": ""
          },
          "required": {
            "value": true,
            "error": "Debe introducir un valor"
          }
        },
        "example": 1,
        "model": true
      }
    },

    "endpoint": {
      "userCreate": {
        "url": "/userCreate",
        "method": "POST",
        "description": "Creación de usuario",
        "explanation": "Crea y devuelve un usuario.  Se elimina el usuario y link de confirmación luego de 24hs",
        "fields": [
          "name",
          "lastName",
          "password",
          "repetitionPass",
          "email",
          "birthdate"
        ]
      },
      "login": {
        "url": "/login",
        "method": "POST",
        "description": "Inicio de sesión  de usuario",
        "explanation": "Inicia la sesión de un usuario y devuelve datos necesarios ",
        "fields": ["email", "password"]
      },
      "logout": {
        "url": "/logout",
        "method": "GET",
        "description": "Cerrar sesión",
        "explanation": "",
        "fields": [],
        "requiredSession": true
      },
      "users": {
        "url": "/users",
        "method": "GET",
        "description": "Obtener todos los usuarios",
        "explanation": "",
        "fields": [],
        "requiredSession": true
      },
      "user": {
        "url": "/user",
        "method": "GET",
        "description": "Obtener un usuario por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession": true
      },
      "userUpdate": {
        "url": "/userUpdate",
        "method": "PUT",
        "description": "Modificar un usuario por su uuid",
        "explanation": "",
        "fields": ["name", "lastName", "birthdate"],
        "requiredSession": true
      },
      "userUpdatePassword": {
        "url": "/userUpdatePassword",
        "method": "PUT",
        "description": "Modificar contraseña del usuario",
        "explanation": "",
        "fields": ["oldPassword", "password", "repetitionPass"],
        "requiredSession": true
      },
      "userDelete": {
        "url": "/userDelete",
        "method": "DELETE",
        "description": "Eliminar un usuario por su uuid",
        "explanation": "",
        "fields": [],
        "requiredSession": true
      }
    }
  },
  "ConfirmarEmail": {
    "description": "Endpoint de confirmación de email",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "09884845-a1f9-4170-a8bd-19bbaf8985e9",
        "model": true
      },
      "user": {
        "description": "Identificador del usuario",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "",
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      }
    },
    "endpoint": {
      "confirmEmail": {
        "url": "/confirmEmail",
        "method": "GET",
        "description": "Confirmación de email",
        "explanation": "Confirma el email de un usuario y elimina la de la tabla de confirmación pendiente",
        "fields": ["uuid"]
      },
      "get_confirmEmail": {
        "url": "/get_confirmEmail",
        "method": "GET",
        "description": "Obtener una confirmación de email",
        "explanation": "Obtiene una confirmación  de email mediante un uuid",
        "fields": ["uuid"]
      },
      "confirmEmails": {
        "url": "/confirmEmail",
        "method": "GET",
        "description": "Lista todas las confirmaciones de email",
        "explanation": "Lista todas las confirmaciones de email, sin orden"
      }
    }
  },
  "Empresas": {
    "description": "Endpoint de empresa",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "owner": {
        "description": "Identificador del dueño de la empresa",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "name": {
        "description": "Nombre de la empresa",
        "property": {
          "type": {
            "value": "string",
            "error": "El nombre debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El nombre debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un nombre"
          }
        },
        "example": "Remates 21",
        "model": true
      },
      "address": {
        "description": "Dirección de la empresa",
        "property": {
          "type": {
            "value": "string",
            "error": "La dirección debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "La dirección debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una dirección"
          }
        },
        "example": "calle 117 nº 80, La Plata",
        "model": true
      },
      "removed": {
        "description": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfUpdate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      }
    },
    "endpoint": {
      "companyCreate": {
        "url": "/companyCreate",
        "method": "POST",
        "description": "Creación de una empresa que va a rematar objetos",
        "explanation": "Crea y devuelve una empresa.",
        "fields": ["name", "address"],
        "requiredSession": true
      },
      "companies": {
        "url": "/companies",
        "method": "GET",
        "description": "Obtener todas las empresas",
        "explanation": "",
        "fields": []
      },
      "company": {
        "url": "/company",
        "method": "GET",
        "description": "Obtener una empresa por su uuid",
        "explanation": "",
        "fields": ["uuid"]
      },
      "companyUpdate": {
        "url": "/companyUpdate",
        "method": "PUT",
        "description": "Modificar una empresa por su uuid",
        "explanation": "",
        "fields": ["name", "address", "uuid"],
        "requiredSession": true
      },
      "companyDelete": {
        "url": "/companyDelete",
        "method": "DELETE",
        "description": "Eliminar una empresa por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession": true
      }
    }
  },
  "Remates": {
    "description": "Endpoint de remate",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "company": {
        "description": "Identificador de la empresa creadora del remate",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "description": {
        "description": "Descripción del remate",
        "property": {
          "type": {
            "value": "string",
            "error": "La descripción debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "La descripción debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una descripción"
          }
        },
        "example": "Gran remate de artículos varios: Artículos para el hogar, herramientas y maquinaria agrícola",
        "model": true
      },
      "dateStart": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "min date": {
            "value": "now",
            "error": "La fecha introducida debe ser posterior a ahora"
          },

          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },

      "removed": {
        "description": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfUpdate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateFinish": {
        "description": "Fecha de finalización del remate, si type es 0 Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "min date": {
            "value": "now",
            "error": "La fecha introducida debe ser posterior a ahora"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dataCompany": {
        "description": "Datos de la compañía creadora del remate.",
        "property": {
          "type": {
            "value": "dict",
            "error": ""
          }
        },
        "model": true
      },
      "articles": {
        "description": "Artículos en el remate. Es un diccionario. para acceder a la lista de artículos es: auction.articles.articles",
        "property": {
          "type": {
            "value": "dict",
            "error": ""
          }
        },
        "example": "articles:[...]",
        "model": true
      },
      "type": {
        "description": "Tipo de inicio de subasta. 0 si inicia y finaliza a una fecha y hora especifica, 1 si la subasta finaliza luego de X segundos pasados luego de la ultima puja valida y luego inicia la subasta del siguiente articulo",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 1,
        "model": true
      },
      "timeAfterBid": {
        "description": "Tiempo desde la ultima puja para que finalice la subasta de un articulo",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": 2,
            "error": "el valor mínimo es 2"
          }
        },
        "example": 10,
        "model": true
      }
    },
    "endpoint": {
      "auctionCreate": {
        "url": "/auctionCreate",
        "method": "POST",
        "description": "Creación de un remate ",
        "explanation": "Crea y devuelve un remate.",
        "fields": ["company", "description", "dateStart","type","dateFinish","timeAfterBid"],
        "requiredSession": true
      },
      "auctions": {
        "url": "/auctions",
        "method": "GET",
        "description": "Obtener todas los remates",
        "explanation": "",
        "fields": []
      },
      "auctionsFinished": {
        "url": "/auctionsFinished",
        "method": "GET",
        "description": "Obtener todas los remates terminados",
        "explanation": "",
        "fields": []
      },
      "auctionsNotFinished": {
        "url": "/auctionsNotFinished",
        "method": "GET",
        "description": "Obtener todas los remates no terminados",
        "explanation": "",
        "fields": []
      },
      "auctionsStarted": {
        "url": "/auctionsStarted",
        "method": "GET",
        "description": "Obtener todas los remates empezados y que no han terminado",
        "explanation": "",
        "fields": []
      },
      "auctionsNotStarted": {
        "url": "/auctionsNotStarted",
        "method": "GET",
        "description": "Obtener todas los remates que no empezaron todavía ",
        "explanation": "",
        "fields": []
      },

      "auction": {
        "url": "/auction",
        "method": "GET",
        "description": "Obtener un remate por su uuid",
        "explanation": "",
        "fields": ["uuid"]
      },
      "auctionsByCompany": {
        "url": "/auctionsByCompany",
        "method": "GET",
        "description": "Obtener todos los remates de una empresa",
        "explanation": "",
        "fields": ["company"]
      },
      "auctionUpdate": {
        "url": "/auctionUpdate",
        "method": "PUT",
        "description": "Modificar un remate por su uuid",
        "explanation": "",
        "fields": ["company", "description", "dateStart", "uuid","type","dateFinish","timeAfterBid"],
        "requiredSession": true
      },
      "auctionDelete": {
        "url": "/auctionDelete",
        "method": "DELETE",
        "description": "Eliminar un remate por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession": true
      }
    }
  },
  "Articulos": {
    "description": "Endpoint de artículos",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "auction": {
        "description": "Identificador del remate al que pertenece",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "next": {
        "description": "Identificador del siguiente articulo",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "dataBid": {
        "description": "Datos de puja ganadora",
        "property": {
          "type": {
            "value": "dict",
            "error": ""
          }
        },
        "model": true
      },
      "before": {
        "description": "Identificador del articulo anterior",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          }

        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "maxBid": {
        "description": "Identificador de la puja mas alta",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "description": {
        "description": "Descripción del articulo",
        "property": {
          "type": {
            "value": "string",
            "error": "La descripción debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "La descripción debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una descripción"
          }
        },
        "example": "Juego de llaves de boca desde 8 a 22",
        "model": true
      },

      "removed": {
        "description": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "started": {
        "description": "Iniciado, 0 si todavía no inicio y 1 si ya inicio la subasta del articulo",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "finished": {
        "description": "Terminado, 0 si no lo esta y 1 si esta finalizada la subasta del articulo",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "bidValue": {
        "description": "Valor de la ultima puja",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          }
        },
        "example": 500,
        "model": true
      },
      "minValue": {
        "description": "valor mínimo de la primer puja",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          }
        },
        "example": 500,
        "model": true
      },
      "type": {
        "description": "Tipo de inicio de subasta. 0 si inicia y finaliza a una hora especifica, 1 si la subasta finaliza luego de X segundos pasados luego de la ultima puja valida y luego inicia la subasta del siguiente articulo",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 1,
        "model": true
      },
      "minStepValue": {
        "description": "Diferencia de valor entre la ultima puja y la anterior",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          }
        },
        "example": 200,
        "model": true
      },
      "timeAfterBid": {
        "description": "Tiempo desde la ultima puja para que finalice la subasta",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": 2,
            "error": "el valor mínimo es 2"
          }
        },
        "example": 10,
        "model": true
      },
      "dateOfFinish": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfStart": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfUpdate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "urlPhoto": {
        "description": "url de la foto del articulo",
        "format": "",
        "property": {
          "type": {
            "value": "url",
            "error": "Debe introducir una url valida"
          },
          "max length": {
            "value": 255,
            "error": "La url debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una url"
          }
        },
        "example": "https://thumbs.dreamstime.com/b/martillo-o-de-remate-subasta-s%C3%ADmbolo-foto-autoridad-y-toma-decisiones-214833893.jpg",
        "model": true
      }
    },
    "endpoint": {
      "articleCreate": {
        "url": "/articleCreate",
        "method": "POST",
        "description": "Creación de un articulo que se va a rematar ",
        "explanation": "Crea y devuelve un articulo.",
        "fields": ["auction","before","description","dateOfStart","dateOfFinish","timeAfterBid","type","minValue","minStepValue","urlPhoto"],
        "requiredSession": true
      },
      "articles": {
        "url": "/articles",
        "method": "GET",
        "description": "Obtener todos los articulos",
        "explanation": "",
        "fields": []
      },
      "article": {
        "url": "/article",
        "method": "GET",
        "description": "Obtener un articulo por su uuid",
        "explanation": "",
        "fields": ["uuid"]
      },
      "articleUpdate": {
        "url": "/articleUpdate",
        "method": "PUT",
        "description": "Modificar un articulo por su uuid",
        "explanation": "",
        "fields": ["description","dateOfStart","dateOfFinish","timeAfterBid","type","minValue","minStepValue","urlPhoto"],
        "requiredSession": true
      },
      "myArticlesBought": {
        "url": "/myArticlesBought",
        "method": "GET",
        "description": "Obtener todos los artículos comprados del usuario",
        "explanation": "",
        "fields": [],
        "requiredSession": true
      },
      "articleDelete": {
        "url": "/articleDelete",
        "method": "DELETE",
        "description": "Eliminar un articulo por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession": true
      }
      
    }
  },
  "Pujas": {
    "description": "Endpoint de pujas",
    "fields": {
      "uuid": {
        "description": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "user": {
        "description": "Identificador del dueño de la puja",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "dataUser": {
        "description": "Datos del usuario dueño de la puja",
        "property": {
          "type": {
            "value": "dict",
            "error": ""
          }
        },
        "model": true
      },
      "article": {
        "description": "Identificador del articulo  a pujar",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model": true
      },
      "removed": {
        "description": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model": true
      },
      "value": {
        "description": "Valor de la puja",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "required":{
            "value":true,
            "error": "Debe introducir un valor"
          }
        },
        "example": 500,
        "model": true
      },
      "dateOfCreate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      },
      "dateOfUpdate": {
        "description": "Formato dia/mes/añoThora:minutos:segundosUTC (23/01/2024T12:29:31-0300)",
        "format": "%d/%m/%YT%H:%M:%S%z",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida con el formato: %d/%m/%YT%H:%M:%S%z (23/01/2024T12:29:31-0300)"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "23/01/2024T12:29:31-0300",
        "model": true
      }
    },
    "endpoint": {
      "bidCreate": {
        "url": "/bidCreate",
        "method": "POST",
        "description": "Creación de una puja por un objeto",
        "explanation": "Crea y devuelve una puja.",
        "fields": ["value","article"],
        "requiredSession": true
      },
      "bids": {
        "url": "/bids",
        "method": "GET",
        "description": "Obtener todas las pujas",
        "explanation": "",
        "fields": [],
        "requiredSession":true
      },
      "bid": {
        "url": "/bid",
        "method": "GET",
        "description": "Obtener una puja por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession":true
      },
      "bidDelete": {
        "url": "/bidDelete",
        "method": "DELETE",
        "description": "Eliminar una puja por su uuid",
        "explanation": "",
        "fields": ["uuid"],
        "requiredSession": true
      },
      "bidByArticle": {
        "url": "/bidByArticle",
        "method": "GET",
        "description": "Obtener todas las pujas sobre un articulo",
        "explanation": "",
        "fields": ["article"],
        "requiredSession": true
      },
      "bidByUser": {
        "url": "/bidByUser",
        "method": "GET",
        "description": "Obtener todas las pujas de un usuario",
        "explanation": "",
        "fields": ["article"],
        "requiredSession": true
      }
    }
  }
}
