{
  "Usuarios": {
    "desciption": "api de los usuarios",
    "fields": {
      "uuid": {
        "desciption": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model":true
      },
      "name": {
        "desciption": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El nombre debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El nombre debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un nombre"
          }
        },
        "example": "Gastón",
        "model":true
      },
      "lastName": {
        "desciption": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El apellido debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El apellido debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un apellido"
          }
        },
        "example": "Nicora",
        "model":true
      },
      "email": {
        "desciption": "",
        "property": {
          "type": {
            "value": "email",
            "error": "El email debe ser un email valido, por ejemplo:'gastonmatias.21@gmail.com'"
          },
          "max length": {
            "value": 255,
            "error": "El email debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un apellido"
          }
        },
        "example": "gastonmatias.21@gmail.com",
        "model":true
      },
      "password": {
        "desciption": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          }
        },
        "example": "12345678",
        "model":true
      },
      "oldPassword": {
        "desciption": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          }
        },
        "example": "12345678",
        "model":false
      },
      "repetitionPass": {
        "desciption": "la contraseña debe contener letras y números, ademas debe contener 8 caracteres como mínimo. No se aceptan caracteres especiales",
        "property": {
          "type": {
            "value": "pass",
            "error": "La contraseña debe contener letras y números. No se aceptan caracteres especiales"
          },
          "max length": {
            "value": 255,
            "error": "La contraseña debe tener un largo menor a 255"
          },
          "min length": {
            "value": 7,
            "error": "La contraseña debe tener un largo mayor o igual a 8"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una contraseña"
          },
          "repeat": {
            "value": true,
            "error": "Las contraseñas deben coincidir",
            "repetition": "password"
          }
        },
        "example": "12345678",
        "model":false
      },
      "birthdate": {
        "desciption": "Formato dia/mes/año (01/01/2013)",
        "property": {
          "type": {
            "value": "date",
            "error": "Debe introducir una fecha valida"
          },
          "max length": {
            "value": 11,
            "error": "La fecha debe tener 10 caracteres"
          },
          "min length": {
            "value": 9,
            "error": "La fecha debe tener 10 caracteres"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una fecha"
          }
        },
        "example": "21/06/1997",
        "model":true
      },
      "removed": {
        "desciption": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model":true
      },
      "confirmEmail": {
        "desciption": "Si confirmo el email, 1 es que si y 0 es que no",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model":true
      },
      "dateOfCreate": {
        "desciption": "",
        "property": {
          "type": {
            "type": {
              "value": "date",
              "error": "Debe introducir una fecha valida"
            },
            "max length": {
              "value": 11,
              "error": "La fecha debe tener 10 caracteres"
            },
            "min length": {
              "value": 9,
              "error": "La fecha debe tener 10 caracteres"
            },
            "required": {
              "value": true,
              "error": "Debe introducir una fecha"
            }
          },
          "example": "21/06/2023",
          "model":true
        }
      },
      "dateOfUpdate": {
        "desciption": "",
        "property": {
          "type": {
            "type": {
              "value": "date",
              "error": "Debe introducir una fecha valida"
            },
            "max length": {
              "value": 11,
              "error": "La fecha debe tener 10 caracteres"
            },
            "min length": {
              "value": 9,
              "error": "La fecha debe tener 10 caracteres"
            },
            "required": {
              "value": true,
              "error": "Debe introducir una fecha"
            }
          },
          "example": "21/06/2023",
          "model":true
        }
      },
      "terms": {
        "type": "Int",
        "desciption": "",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir una fecha valida"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 1,
            "error": ""
          },
          "required": {
            "value": true,
            "error": "Debe introducir un valor"
          }
        },
        "example": 1,
        "model":true
      }
    },

    "endpoint": {
      "userCreate": {
        "url": "/userCreate",
        "method": "POST",
        "description": "Creación de usuario",
        "explanation": "Crea y devuelve un usuario. Si hay un el email esta registrado pero no confirmado elimina el usuario y link de creación antiguos y los vuelve a crear",
        "fields": ["name", "lastName", "password","repetitionPass", "email", "birthdate"]
      },
      "login": {
        "url": "/login",
        "method": "POST",
        "description": "Inicio de sesión  de usuario",
        "explanation": "Inicia la sesión de un usuario y devuelve datos necesarios ",
        "fields": [ "email", "password"]
      },
      "logout": {
        "url": "/logout",
        "method": "GET",
        "description": "Cerrar sesión",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": []
      },
      "users": {
        "url": "/users",
        "method": "GET",
        "description": "Obtener todos los usuarios",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": []
      },
      "user": {
        "url": "/user",
        "method": "GET",
        "description": "Obtener un usuario por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["uuid"]
      },
      "userUpdate": {
        "url": "/userUpdate",
        "method": "PUT",
        "description": "Modificar un usuario por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["name", "lastName", "email", "birthdate"]
      },
      "userUpdatePassword": {
        "url": "/userUpdatePassword",
        "method": "PUT",
        "description": "Modificar contraseña de un  por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["uuid","oldPassword", "password","repetitionPass"]
      },
      "userDelete": {
        "url": "/userDelete",
        "method": "DELETE",
        "description": "Eliminar un usuario por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["uuid"]
      }
    }
  },
  "ConfirmarEmail": {
    "desciption": "Endpoint de confirmación de email",
    "fields": {
      "uuid": {
        "desciption": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "",
        "model":true
      },
      "user": {
        "desciption": "Identificador del usuario",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "",
        "model":true
      },
      "dateOfCreate": {
        "desciption": "",
        "property": {
          "type": {
            "type": {
              "value": "date",
              "error": "Debe introducir una fecha valida"
            },
            "max length": {
              "value": 11,
              "error": "La fecha debe tener 10 caracteres"
            },
            "min length": {
              "value": 9,
              "error": "La fecha debe tener 10 caracteres"
            },
            "required": {
              "value": true,
              "error": "Debe introducir una fecha"
            }
          },
          "example": "21/06/2023",
          "model":true
        }
      }
    },
    "endpoint": {
      "confirmEmail": {
        "url": "/confirmEmail/",
        "method": "GET",
        "description": "Confirmación de email",
        "explanation": "Confirma el email de un usuario y elimina la de la tabla de confirmación pendiente",
        "fields": ["uuid"]
      },
      "get_confirmEmail": {
        "url": "/get_confirmEmail/",
        "method": "GET",
        "description": "Obtener una confirmación de email",
        "explanation": "Obtiene una confirmación  de email mediante un uuid",
        "fields": ["uuid"]
      },
      "confirmEmails": {
        "url": "/confirmEmail",
        "method": "GET",
        "description": "Lista todas las confirmaciones de email",
        "explanation": "Lista todas las confirmaciones de email, sin orden"
      }
    }
  },
  "Empresas": {
    "desciption": "api de los usuarios",
    "fields": {
      "uuid": {
        "desciption": "",
        "property": {
          "type": {
            "value": "string",
            "error": "El identificador debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El identificador debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un identificador"
          }
        },
        "example": "f8773c44-bd9a-4ffe-922f-4b661ebca35e",
        "model":true
      },
      "name": {
        "desciption": "Nombre de la empresa",
        "property": {
          "type": {
            "value": "string",
            "error": "El nombre debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "El nombre debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir un nombre"
          }
        },
        "example": "Remates 21",
        "model":true
      }
      ,
      "address": {
        "desciption": "Dirección de la empresa",
        "property": {
          "type": {
            "value": "string",
            "error": "La dirección debe ser una cadena de caracteres"
          },
          "max length": {
            "value": 255,
            "error": "La dirección debe tener un largo menor a 255"
          },
          "required": {
            "value": true,
            "error": "Debe introducir una dirección"
          }
        },
        "example": "calle 117 nº 80, La Plata",
        "model":true
      },
      "removed": {
        "desciption": "Borrado lógico, 1 es borrado y 0 que no lo esta ",
        "property": {
          "type": {
            "value": "integer",
            "error": "Debe introducir un numero entero valido"
          },
          "max": {
            "value": 2,
            "error": "El valor máximo es 1"
          },
          "min": {
            "value": -1,
            "error": "el valor mínimo es 0"
          },
          "default": {
            "value": 0,
            "error": ""
          }
        },
        "example": 0,
        "model":true
      },
      "dateOfCreate": {
        "desciption": "",
        "property": {
          "type": {
            "type": {
              "value": "date",
              "error": "Debe introducir una fecha valida"
            },
            "max length": {
              "value": 11,
              "error": "La fecha debe tener 10 caracteres"
            },
            "min length": {
              "value": 9,
              "error": "La fecha debe tener 10 caracteres"
            },
            "required": {
              "value": true,
              "error": "Debe introducir una fecha"
            }
          },
          "example": "21/06/2023",
          "model":true
        }
      },
      "dateOfUpdate": {
        "desciption": "",
        "property": {
          "type": {
            "type": {
              "value": "date",
              "error": "Debe introducir una fecha valida"
            },
            "max length": {
              "value": 11,
              "error": "La fecha debe tener 10 caracteres"
            },
            "min length": {
              "value": 9,
              "error": "La fecha debe tener 10 caracteres"
            },
            "required": {
              "value": true,
              "error": "Debe introducir una fecha"
            }
          },
          "example": "21/06/2023",
          "model":true
        }
      }
    },
    "endpoint": {
      "companyCreate": {
        "url": "/companyCreate",
        "method": "POST",
        "description": "Creación de una empresa que va a rematar objetos",
        "explanation": "Crea y devuelve una empresa. Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["name", "address"]
      },
      "companies": {
        "url": "/companies",
        "method": "GET",
        "description": "Obtener todas las empresas",
        "explanation": "",
        "fields": []
      },
      "company": {
        "url": "/company",
        "method": "GET",
        "description": "Obtener una empresa por su uuid",
        "explanation": "",
        "fields": ["uuid"]
      },
      "companyUpdate": {
        "url": "/companyUpdate",
        "method": "PUT",
        "description": "Modificar una empresa por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["name","address","uuid"]
      },
      "companyDelete": {
        "url": "/companyDelete",
        "method": "DELETE",
        "description": "Eliminar una empresa por su uuid",
        "explanation": "Requiere en el header 'x-access-tokens' el token de inicio de sesión",
        "fields": ["uuid"]
      }
    }
  }
}
